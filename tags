!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Around	../../src/./keyboard.c	/^} Around;$/;"	t	typeref:struct:__anon2	file:
MINES_COUNT	../../src/./main.c	/^unsigned int X = 10, SPACES = 1, MINES_COUNT = 10;$/;"	v
SPACES	../../src/./main.c	/^unsigned int X = 10, SPACES = 1, MINES_COUNT = 10;$/;"	v
TYPES_CONSLE	../../src/./main.c	/^enum Types { TYPES_CONSLE = 0, TYPES_NCURSES = 1};$/;"	e	enum:Types	file:
TYPES_NCURSES	../../src/./main.c	/^enum Types { TYPES_CONSLE = 0, TYPES_NCURSES = 1};$/;"	e	enum:Types	file:
Types	../../src/./main.c	/^enum Types { TYPES_CONSLE = 0, TYPES_NCURSES = 1};$/;"	g	file:
WHERE_DEFALUT	../../src/./main.c	/^enum WhereLoad {WHERE_DEFALUT=0, WHERE_LOAD_FROM_FILE=1};$/;"	e	enum:WhereLoad	file:
WHERE_LOAD_FROM_FILE	../../src/./main.c	/^enum WhereLoad {WHERE_DEFALUT=0, WHERE_LOAD_FROM_FILE=1};$/;"	e	enum:WhereLoad	file:
WhereLoad	../../src/./main.c	/^enum WhereLoad {WHERE_DEFALUT=0, WHERE_LOAD_FROM_FILE=1};$/;"	g	file:
X	../../src/./main.c	/^unsigned int X = 10, SPACES = 1, MINES_COUNT = 10;$/;"	v
addSize	../../src/./ter/input.c	17;"	d	file:
always	../../src/./ter/message.c	/^	char* always;$/;"	m	struct:__anon1	file:
dat	../../src/./ter/input.c	/^static char* dat = NULL;$/;"	v	file:
delSize	../../src/./ter/input.c	18;"	d	file:
down	../../src/./keyboard.c	/^	Block* up, *down, *left, *right, *upWithLeft, *upWithRight, *downWithLeft, *downWithRight;$/;"	m	struct:__anon2	file:
downWithLeft	../../src/./keyboard.c	/^	Block* up, *down, *left, *right, *upWithLeft, *upWithRight, *downWithLeft, *downWithRight;$/;"	m	struct:__anon2	file:
downWithRight	../../src/./keyboard.c	/^	Block* up, *down, *left, *right, *upWithLeft, *upWithRight, *downWithLeft, *downWithRight;$/;"	m	struct:__anon2	file:
execInitNumbers	../../src/./keyboard.c	/^static void execInitNumbers(Block* dat) {$/;"	f	file:
execOpen	../../src/./keyboard.c	/^static void execOpen(Block* dat) {$/;"	f	file:
exitDontSaveAnyThing	../../src/./main.c	104;"	d	file:
exitDontSaveAnyThing	../../src/./main.c	192;"	d	file:
freeData	../../src/./main.c	/^static void freeData() {$/;"	f	file:
gameData	../../src/./main.c	/^Block* gameData;$/;"	v
getAround	../../src/./keyboard.c	/^static Around getAround(Block* data, int x, int y) {$/;"	f	file:
getChar4ncurses	../../src/./screen/ncurses_main.c	/^static char getChar4ncurses(int num, int debug) {$/;"	f	file:
getCharByDebug	../../src/./ter/consle.c	/^inline static char getCharByDebug(Who who) {$/;"	f	file:
getFromArray	../../src/./keyboard.c	/^inline static Block* getFromArray(Block* data, int x , int y) {return data + x*X + y;}$/;"	f	file:
getMousePosByXY	../../src/./screen/ncurses_main.c	/^static Vector2d getMousePosByXY(unsigned int x, unsigned int y) {$/;"	f	file:
handleError11	../../src/./main.c	/^static void handleError11(int i) {$/;"	f	file:
handleSigInt	../../src/./main.c	/^static void handleSigInt(int i) {$/;"	f	file:
ifNotNull	../../src/./ter/message.c	15;"	d	file:
ifNotNull	../../src/./ter/message.c	18;"	d	file:
ifNotNullFree	../../src/./main.c	277;"	d	file:
ifNotNullFree	../../src/./main.c	283;"	d	file:
init	../../src/./main.c	/^static void init() {$/;"	f	file:
isDown	../../src/./keyboard.c	/^	int isUp, isDown, isLeft, isRight, isUpWithLeft, isUpWithRight, isDownWithLeft, isDownWithRight;$/;"	m	struct:__anon2	file:
isDownWithLeft	../../src/./keyboard.c	/^	int isUp, isDown, isLeft, isRight, isUpWithLeft, isUpWithRight, isDownWithLeft, isDownWithRight;$/;"	m	struct:__anon2	file:
isDownWithRight	../../src/./keyboard.c	/^	int isUp, isDown, isLeft, isRight, isUpWithLeft, isUpWithRight, isDownWithLeft, isDownWithRight;$/;"	m	struct:__anon2	file:
isEnter	../../src/./ter/input.c	/^static bool isEnter = false;$/;"	v	file:
isFirst	../../src/./ter/input.c	/^static bool isFirst = true;$/;"	v	file:
isLeft	../../src/./keyboard.c	/^	int isUp, isDown, isLeft, isRight, isUpWithLeft, isUpWithRight, isDownWithLeft, isDownWithRight;$/;"	m	struct:__anon2	file:
isRight	../../src/./keyboard.c	/^	int isUp, isDown, isLeft, isRight, isUpWithLeft, isUpWithRight, isDownWithLeft, isDownWithRight;$/;"	m	struct:__anon2	file:
isUp	../../src/./keyboard.c	/^	int isUp, isDown, isLeft, isRight, isUpWithLeft, isUpWithRight, isDownWithLeft, isDownWithRight;$/;"	m	struct:__anon2	file:
isUpWithLeft	../../src/./keyboard.c	/^	int isUp, isDown, isLeft, isRight, isUpWithLeft, isUpWithRight, isDownWithLeft, isDownWithRight;$/;"	m	struct:__anon2	file:
isUpWithRight	../../src/./keyboard.c	/^	int isUp, isDown, isLeft, isRight, isUpWithLeft, isUpWithRight, isDownWithLeft, isDownWithRight;$/;"	m	struct:__anon2	file:
left	../../src/./keyboard.c	/^	Block* up, *down, *left, *right, *upWithLeft, *upWithRight, *downWithLeft, *downWithRight;$/;"	m	struct:__anon2	file:
list	../../src/./ter/message.c	/^} list;$/;"	v	typeref:struct:__anon1
loadArgs	../../src/./main.c	/^static inline void loadArgs(int argc, char** argv) {$/;"	f	file:
mMinesCount	../../src/./FileBridge.cpp	/^	static int mX, mMinesCount;$/;"	v	file:
mX	../../src/./FileBridge.cpp	/^	static int mX, mMinesCount;$/;"	v	file:
main	../../src/./main.c	/^int main(int argc, char** argv) {$/;"	f
needShowing	../../src/./ter/message.c	/^	int needShowing;$/;"	m	struct:__anon1	file:
printNumZero	../../src/./ter/consle.c	/^inline static void printNumZero(unsigned int num) {$/;"	f	file:
printTopLine	../../src/./ter/consle.c	/^static inline void printTopLine(Vector2d pos, const char *space) {$/;"	f	file:
printw0Number	../../src/./screen/ncurses_main.c	/^static void printw0Number(unsigned int number) {$/;"	f	file:
resizeInput	../../src/./ter/input.c	/^static int resizeInput(int msize) {$/;"	f	file:
right	../../src/./keyboard.c	/^	Block* up, *down, *left, *right, *upWithLeft, *upWithRight, *downWithLeft, *downWithRight;$/;"	m	struct:__anon2	file:
runAround	../../src/./keyboard.c	/^static void runAround(Around a, void (*retFunc)(Block* da), int type) {$/;"	f	file:
setNumberArgument	../../src/./main.c	105;"	d	file:
setNumberArgument	../../src/./main.c	193;"	d	file:
shoot	../../src/./ter/message.c	/^	char* shoot;$/;"	m	struct:__anon1	file:
size	../../src/./ter/input.c	/^static int size = 1;$/;"	v	file:
sl_FileBridge_loadArgsFromFile	../../src/./FileBridge.cpp	/^	void sl_FileBridge_loadArgsFromFile(const char* path) {$/;"	f
sl_FileBridge_loadDataFromFile	../../src/./FileBridge.cpp	/^	void sl_FileBridge_loadDataFromFile() {$/;"	f
sl_FileBridge_save	../../src/./FileBridge.cpp	/^	void sl_FileBridge_save(int saveStatus) {$/;"	f
sl_consle_printDataForDEBUG	../../src/./ter/consle.c	/^void sl_consle_printDataForDEBUG(Vector2d pos, int DEBUG) {$/;"	f
sl_input_freeInput	../../src/./ter/input.c	/^void sl_input_freeInput() { if (dat) free(dat); }$/;"	f
sl_input_getUserInput	../../src/./ter/input.c	/^UserInput sl_input_getUserInput() {	$/;"	f
sl_input_readHandleInput	../../src/./ter/input.c	/^void sl_input_readHandleInput() {$/;"	f
sl_inputprintInput	../../src/./ter/input.c	/^void sl_inputprintInput() {$/;"	f
sl_keyboard_checkIsWinner	../../src/./keyboard.c	/^int sl_keyboard_checkIsWinner(Block *data) {$/;"	f
sl_keyboard_cleanNumbers	../../src/./keyboard.c	/^void sl_keyboard_cleanNumbers() {$/;"	f
sl_keyboard_initNumbers	../../src/./keyboard.c	/^void sl_keyboard_initNumbers() {$/;"	f
sl_keyboard_open	../../src/./keyboard.c	/^OpenFinal sl_keyboard_open(Vector2d pos) {$/;"	f
sl_keyboard_setFlag	../../src/./keyboard.c	/^void sl_keyboard_setFlag(Vector2d pos) {$/;"	f
sl_keyboard_spawnMinesWithCount	../../src/./keyboard.c	/^void sl_keyboard_spawnMinesWithCount(size_t minesCount) {$/;"	f
sl_main_exitGame	../../src/./main.c	/^void sl_main_exitGame(int shouldSaveStatus) {$/;"	f
sl_message_freeMessage	../../src/./ter/message.c	/^void sl_message_freeMessage() {$/;"	f
sl_message_printAll	../../src/./ter/message.c	/^void sl_message_printAll() {$/;"	f
sl_messgae_addMessage	../../src/./ter/message.c	/^void sl_messgae_addMessage(const char* message, int type) {$/;"	f
sl_ncursesMain_initNcurses	../../src/./screen/ncurses_main.c	/^void sl_ncursesMain_initNcurses() {$/;"	f
sl_ncursesMain_printData	../../src/./screen/ncurses_main.c	/^void sl_ncursesMain_printData(Vector2d pos, int debug) {	$/;"	f
sl_ncursesMain_runSecondMouse	../../src/./screen/ncurses_main.c	/^UserInput sl_ncursesMain_runSecondMouse() {$/;"	f
sl_ncursesTheme_initPairs	../../src/./screen/ncurses_theme.c	/^void sl_ncursesTheme_initPairs() {$/;"	f
sl_ncursesTheme_setAttrToBackGreen	../../src/./screen/ncurses_theme.c	/^void sl_ncursesTheme_setAttrToBackGreen() {$/;"	f
sl_ncursesTheme_setAttrToBackGreenWithRed	../../src/./screen/ncurses_theme.c	/^void sl_ncursesTheme_setAttrToBackGreenWithRed() {$/;"	f
sl_ncursesTheme_setAttrToBackGreener	../../src/./screen/ncurses_theme.c	/^void sl_ncursesTheme_setAttrToBackGreener() {$/;"	f
sl_ncursesTheme_setAttrToNull	../../src/./screen/ncurses_theme.c	/^void sl_ncursesTheme_setAttrToNull() {$/;"	f
sl_ncursesTheme_setAttrToRed	../../src/./screen/ncurses_theme.c	/^void sl_ncursesTheme_setAttrToRed() {$/;"	f
sl_process_showProcess	../../src/./ter/consle.c	/^int sl_process_showProcess(unsigned int pro, unsigned int max,$/;"	f
startGameWithConsle	../../src/./main.c	/^static void startGameWithConsle() {$/;"	f	file:
startGameWithNcurses	../../src/./main.c	/^static void startGameWithNcurses() {$/;"	f	file:
type	../../src/./main.c	/^static int type;\/\/0:consle, 1:ncurses$/;"	v	file:
up	../../src/./keyboard.c	/^	Block* up, *down, *left, *right, *upWithLeft, *upWithRight, *downWithLeft, *downWithRight;$/;"	m	struct:__anon2	file:
upWithLeft	../../src/./keyboard.c	/^	Block* up, *down, *left, *right, *upWithLeft, *upWithRight, *downWithLeft, *downWithRight;$/;"	m	struct:__anon2	file:
upWithRight	../../src/./keyboard.c	/^	Block* up, *down, *left, *right, *upWithLeft, *upWithRight, *downWithLeft, *downWithRight;$/;"	m	struct:__anon2	file:
updateConlse	../../src/./main.c	/^void updateConlse(Vector2d pos) {$/;"	f
where2load	../../src/./main.c	/^static int where2load = 0;$/;"	v	file:
who	../../src/./screen/ncurses_theme.c	/^static volatile int who = 0;$/;"	v	file:
